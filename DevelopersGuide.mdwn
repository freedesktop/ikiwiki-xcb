XCB and Xlib/XCB development efforts are coordinated using CVS and git, this Wiki, and the [XCB mailing list](http://www.freedesktop.org/mailman/listinfo/xcb).

The CVS repository is hosted by freedesktop.org since October 2003, replacing the repository on [Keith Packard's server](http://home.keithp.com). See the [instructions for freedesktop.org CVS](http://www.freedesktop.org/wiki/GettingInvolved); our CVSROOT is in [/cvs/xcb](http://cvs.freedesktop.org/xcb/). [libX11](http://gitweb.freedesktop.org/?p=xorg-lib-libX11) and [xcb](http://gitweb.freedesktop.org/?p=xcb) repositories now use [git](http://git.or.cz/) as SCM. The git repository was created to integrate the XCB work in the X11 library and at the same time do real testing of alternatives to CVS.

To build XCB from source, you need to have installed at least:

- git 1.2
- [pkgconfig](http://pkgconfig.freedesktop.org) 0.15.0
- automake 1.7
- autoconf 2.50
- libtool 1.5.6
- [check](http://check.sourceforge.net) (but see [[NoCheck]] if you don't want to install this)
- xsltproc
- gperf 3.0.1

(Trivial patches to support earlier versions, or a note that earlier versions "just work", would be welcome.)

Please familiarize yourself with the [Modular Developer's Guide](http://xorg.freedesktop.org/wiki/ModularDevelopersGuide) before trying to build any part of X.org. Freedesktop's main site has detailed instructions for [using git](http://freedesktop.org/wiki/UsingGit) for everyday development.

- How to get a copy of xcb/libX11:
  - `git clone git://anongit.freedesktop.org/git/xcb` (this will create an 'xcb' directory in the working directory)
  - `git clone git://anongit.freedesktop.org/git/xorg/lib/libX11` (same for libX11)
  - git will create a `.git` directory inside the source directory where it stores all the info

There are multiple modules. The modules you need to checkout, build, and install for XCB are, in order:

- from [X.org](http://xorg.freedesktop.org/wiki/ModularDevelopersGuide) CVS:
  - util/macros (see note below)
  - proto/X11
  - lib/Xau
- from git: git://anongit.freedesktop.org/git/xcb:
  - xcb-proto
  - xcb

To build the XCB demos, from git: git://anongit.freedesktop.org/git/xcb:

- xcb-util
- xcb-demo

To build Xlib with support for XCB, first build XCB as above. After that, the modules you need to checkout, build, and install for Xlib are, in order:

- from [X.org](http://xorg.freedesktop.org/wiki/ModularDevelopersGuide) CVS:
  - proto/XExt
  - proto/KB
  - proto/Input
  - lib/xtrans
- from git: git://anongit.freedesktop.org/git/xorg/lib/libX11

Note that aclocal needs to be able to find the files installed from util/macros. You may need to set ACLOCAL="aclocal -I /usr/local/share/aclocal" or similar before running autogen.sh or autoreconf.

This is a fairly complex operation at this point. Watch out for pkgconfig problems, esp. distinguishing `/usr/local`, `/usr`, and `/usr/X11R6` in the config. Note that proto/X11 and xcb-proto exist only to install header files, so typing `make` or `make all` will produce the message "Nothing to be done for 'all'". That's normal.

### Mailing List

The [XCB mailing list](http://www.freedesktop.org/mailman/listinfo/xcb) is hosted by freedesktop.org.

Jeremy has set up a new [xcb-commit](http://www.freedesktop.org/mailman/listinfo/xcb-commit) mailing list to notify users of cvs commits. We also have a [CIA project page](http://cia.navi.cx/stats/project/xcb) where people can find RSS feeds of xcb commits.

There is also an #xcb IRC channel.

### Implementation and Status

Both XCB and our [[XlibXcb]] efforts are works in progress; [[XCBToDo]] describes current work needed and in progress. Also available: [[XcbRationale]] and [[XcbApi]] documentation.

The protocol layer of XCB is implemented as a set of [XML](http://www.w3.org/XML) protocol descriptions, along with an [XSLT](http://www.w3.org/TR/xslt)-based C binding generator. The remainder of XCB consists of C code.

The structure of XCB is designed to be as simple as possible while making common usage convenient and reasonably efficient. XCB is designed to work transparently with POSIX Thread programs or single-threaded programs: on platforms where POSIX threads are unavailable, it will be compilable without.

The X core requests have been implemented in XCB, as well as the BIG-REQUESTS, XC-Misc, SHAPE, SHM, DPMS, Render, Randr, GLX, [XFIXES](http://www.freedesktop.org/Software/FixesExt), [Composite](http://www.freedesktop.org/Software/CompositeExt), [DAMAGE](http://www.freedesktop.org/Software/XDamage) and [XEvIE](http://www.freedesktop.org/Software/XEvIE) extensions. A multithreaded demonstration program uses XCB for animated graphics in multiple windows. Other demos for Render, event monitoring, access to connection setup data, and DPMS also exist.

[[JoshTriplett]] has documented the [XML-XCB protocol description format](http://gitweb.freedesktop.org/?p=xcb;a=blob;f=xcb-proto/doc/xml-xcb.txt); this documentation is included in the xcb-proto package.

[[BartMassey]] has done some [[work|Publications]] on establishing correctness properties of the core data dispatch mechanism of XCB using a model of XCB written in the [Z](http://www.afm.sbu.ac.uk/z/) formal specification notation. This is good, since the mechanism is complex, and the previous version was known to have defects.
